import { numToLezgi } from '../src/index';
import { numToLezgiArray } from '../src/numToLezgi';

const correctValues: [number, string, string[] | undefined][] = [
  [
    1986,
    'агъзурни кIуьд вишни кьудкъанни ругуд',
    ['агъзур', 'ни', 'кIуьд', ' ', 'виш', 'ни', 'кьуд', 'къанни', 'ругуд '],
  ],
  [1917, 'агъзурни кIуьд вишни цIерид', ['агъзур', 'ни', 'кIуьд', ' ', 'виш', 'ни', 'цIе', 'рид']],
  [
    1937,
    'агъзурни кIуьд вишни къанни цIерид',
    ['агъзур', 'ни', 'кIуьд', ' ', 'виш', 'ни', 'къанни', 'цIе', 'рид'],
  ],
  [
    4113267557,
    'кьуд миллиардни вишни цIипуд миллионни кьве вишни пудкъанни ирид агъзурни вад вишни яхцIурни цIерид',
    [
      'кьуд',
      ' ',
      'миллиард',
      'ни',
      'виш',
      'ни',
      'цIи',
      'пуд ',
      ' ',
      'миллион',
      'ни ',
      'кьве',
      ' ',
      'виш',
      'ни',
      'пуд',
      'къанни',
      'ирид ',
      ' ',
      'агъзур',
      'ни',
      'вад',
      ' ',
      'виш',
      'ни',
      'яхцIур',
      'ни',
      'цIе',
      'рид',
    ],
  ],
  [2024, 'кьве агъзурни къанни кьуд', ['кьве', ' ', 'агъзур', 'ни', 'къанни', 'кьуд ']],
  [100000, 'виш агъзур', ['виш', ' ', 'агъзур']],
  [2000000, 'кьве миллион', ['кьве', ' ', 'миллион']],
  [2000001, 'кьве миллионни сад', ['кьве', ' ', 'миллион', 'ни ', 'сад ']],
  [700, 'ирид виш', ['ирид', ' ', 'виш']],
  [1001, 'агъзурни сад', ['агъзур', 'ни', 'сад ']],
  [102, 'вишни кьвед', ['виш', 'ни', 'кьвед ']],
  [-102, 'минус вишни кьвед', ['минус', 'виш', 'ни', 'кьвед ']],
  [
    9007199254740991,
    'кIуьд квадриллионни ирид триллионни вишни кьудкъанни цIекIуьд миллиардни кьве вишни яхцIурни цIикьуд миллионни ирид вишни яхцIур агъзурни кIуьд вишни кьудкъанни цIусад',
    [
      'кIуьд',
      ' ',
      'квадриллион',
      'ни',
      'ирид',
      ' ',
      'триллион',
      'ни',
      'виш',
      'ни',
      'кьуд',
      'къанни',
      'цIе',
      'кIуьд ',
      ' ',
      'миллиард',
      'ни',
      'кьве',
      ' ',
      'виш',
      'ни',
      'яхцIур',
      'ни',
      'цIи',
      'кьуд ',
      ' ',
      'миллион',
      'ни ',
      'ирид',
      ' ',
      'виш',
      'ни',
      'яхцIур',
      ' ',
      'агъзур',
      'ни',
      'кIуьд',
      ' ',
      'виш',
      'ни',
      'кьуд',
      'къанни',
      'цIу',
      'сад ',
    ],
  ],
  [
    9007199254720991,
    'кIуьд квадриллионни ирид триллионни вишни кьудкъанни цIекIуьд миллиардни кьве вишни яхцIурни цIикьуд миллионни ирид вишни къад агъзурни кIуьд вишни кьудкъанни цIусад',
    [
      'кIуьд',
      ' ',
      'квадриллион',
      'ни',
      'ирид',
      ' ',
      'триллион',
      'ни',
      'виш',
      'ни',
      'кьуд',
      'къанни',
      'цIе',
      'кIуьд ',
      ' ',
      'миллиард',
      'ни',
      'кьве',
      ' ',
      'виш',
      'ни',
      'яхцIур',
      'ни',
      'цIи',
      'кьуд ',
      ' ',
      'миллион',
      'ни ',
      'ирид',
      ' ',
      'виш',
      'ни',
      'къад',
      ' ',
      'агъзур',
      'ни',
      'кIуьд',
      ' ',
      'виш',
      'ни',
      'кьуд',
      'къанни',
      'цIу',
      'сад ',
    ],
  ],
];

test.each(correctValues)(
  'convert (%j) should equal "%s"',
  (input, expectedString, expectedArray) => {
    expect(numToLezgi(input)).toEqual(expectedString);
    expect(numToLezgiArray(input)).toEqual(expectedArray);
  },
);

const nanValues = [NaN, Infinity, -Infinity, undefined, null, 'random string', {}, []];
test.each(nanValues)('(%j) should throw an error', (input: any) => {
  expect(() => numToLezgi(input)).toThrow();
  expect(() => numToLezgiArray(input)).toThrow();
});

const floatValues = [1.1, 1.5, 1.9, 1.00000000000001, 1.99999999999999];
test.each(floatValues)('(%j) should throw an error', (input: any) => {
  expect(() => numToLezgi(input)).toThrow();
  expect(() => numToLezgiArray(input)).toThrow();
});
